<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
    <flow name="processorders">
        <set-variable variableName="orders" value="#[payload]" doc:name="variable - store orders"/>
        <set-payload value="#[{'international': java.util.Map&lt;String,String&gt;[], 'domestic': java.util.Map&lt;String,String&gt;[]}]" doc:name="Set Payload : set order schema"/>
        <dw:transform-message doc:name="Populate International key contents">
            <dw:input-payload doc:sample="sample_data\string.dwl"/>
            <dw:input-variable doc:sample="sample_data\UserDefined.dwl" variableName="orders"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	international: flowVars.orders filter $.'location'== 'international',
	domestic: '1'
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>
</mule>
